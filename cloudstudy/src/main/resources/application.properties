## 数据源配置
spring.datasource.url=jdbc:mysql://localhost:3306/cloudstudy?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=liyuhao
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
#登录数据源界面使用的用户名
spring.datasource.login.user.name=admin
#登录数据源界面使用的密码
spring.datasource.login.user.password=admin
	

## Mybatis 配置
mybatis.typeAliasesPackage=com.cloudstudy.bo
mybatis.mapperLocations=classpath:mapper/*.xml

##系统配置
#默认情况下Spring Boot内嵌的Tomcat服务器会在8080端口启动HTTP服务，Spring Boot允许在application.properties中配置HTTP或HTTPS，但是不可同时配置
server.port = 9680

## Freemarker 配置
## 文件配置路径
spring.freemarker.template-loader-path=classpath:/web/
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.request-context-attribute=request
spring.freemarker.suffix=.ftl

#spring boot 打印myabtis sql语句
logging.level.com.cloudstudy.controller=WARN
logging.level.com.cloudstudy.service=INFO
logging.level.com.cloudstudy.mapper=DEBUG
logging.file=logs/cloudstudy-logging.log

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

#Spring Boot中启动HTTPS
#keystore文件地址
server.ssl.key-store=classpath:keystore/keystore.p12
#keystore密码
server.ssl.key-store-password=123456
#keystore类型
server.ssl.keyStoreType=PKCS12
#keystore别名
server.ssl.keyAlias=tomcat


#如果上传的文件大于100M 时，上传会报错文件太大的错误
spring.http.multipart.maxFileSize=100Mb
#如果请求数据大于100M 时，上传会报错数据太大的错误
spring.http.multipart.maxRequestSize=100Mb

#Springboot 之 静态资源路径配置
#静态文件的路径
web.upload-path=D://cloudstudy/
#表示所有的访问都经过静态资源路径
spring.mvc.static-path-pattern=/**
#在这里配置静态资源路径，前面说了这里的配置是覆盖默认配置，所以需要将默认的也加上否则static、public等这些路径将不能被当作静态资源路径，在这个最末尾的file:${web.upload-path}之所有要加file:是因为指定的是一个具体的硬盘路径，其他的使用classpath指的是系统环境变量
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${web.upload-path}
